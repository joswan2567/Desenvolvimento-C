ARM GAS  /tmp/ccA5UZJh.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 5461736B 		.ascii	"Task2\000"
  20      3200
  21              		.text
  22              	.Ltext0:
  23              		.cfi_sections	.debug_frame
  24              		.section	.text.MX_GPIO_Init,"ax",%progbits
  25              		.align	1
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	MX_GPIO_Init:
  31              	.LFB72:
  32              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "cmsis_os.h"
  23:Core/Src/main.c **** 
ARM GAS  /tmp/ccA5UZJh.s 			page 2


  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** osThreadId defaultTaskHandle, Task2Handler;
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  53:Core/Src/main.c **** void task2Init(void const *argument);
  54:Core/Src/main.c **** int idx = 0;
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /tmp/ccA5UZJh.s 			page 3


  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  96:Core/Src/main.c ****   /* add mutexes, ... */
  97:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 100:Core/Src/main.c ****   /* add semaphores, ... */
 101:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 104:Core/Src/main.c ****   /* start timers, add new ones, ... */
 105:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 108:Core/Src/main.c ****   /* add queues, ... */
 109:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Create the thread(s) */
 112:Core/Src/main.c ****   /* definition and creation of defaultTask */
 113:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 114:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   osThreadDef(Task2, task2Init, osPriorityNormal, 0, 128);
 117:Core/Src/main.c ****   Task2Handler = osThreadCreate(osThread(Task2), NULL);
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 120:Core/Src/main.c ****   /* add threads, ... */
 121:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Start scheduler */
 124:Core/Src/main.c ****   osKernelStart();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 127:Core/Src/main.c ****   /* Infinite loop */
 128:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c ****     /* USER CODE END WHILE */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /* USER CODE END 3 */
 136:Core/Src/main.c **** }
 137:Core/Src/main.c **** 
ARM GAS  /tmp/ccA5UZJh.s 			page 4


 138:Core/Src/main.c **** /**
 139:Core/Src/main.c ****   * @brief System Clock Configuration
 140:Core/Src/main.c ****   * @retval None
 141:Core/Src/main.c ****   */
 142:Core/Src/main.c **** void SystemClock_Config(void)
 143:Core/Src/main.c **** {
 144:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 145:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief GPIO Initialization Function
 175:Core/Src/main.c ****   * @param None
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** static void MX_GPIO_Init(void)
 179:Core/Src/main.c **** {
  33              		.loc 1 179 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 32
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42 0002 88B0     		sub	sp, sp, #32
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 40
 180:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 180 3 view .LVU1
  46              		.loc 1 180 20 is_stmt 0 view .LVU2
ARM GAS  /tmp/ccA5UZJh.s 			page 5


  47 0004 0023     		movs	r3, #0
  48 0006 0493     		str	r3, [sp, #16]
  49 0008 0593     		str	r3, [sp, #20]
  50 000a 0693     		str	r3, [sp, #24]
  51 000c 0793     		str	r3, [sp, #28]
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 183:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 183 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 183 3 view .LVU4
  55              		.loc 1 183 3 view .LVU5
  56 000e 03F18043 		add	r3, r3, #1073741824
  57 0012 03F50433 		add	r3, r3, #135168
  58 0016 9A69     		ldr	r2, [r3, #24]
  59 0018 42F01002 		orr	r2, r2, #16
  60 001c 9A61     		str	r2, [r3, #24]
  61              		.loc 1 183 3 view .LVU6
  62 001e 9A69     		ldr	r2, [r3, #24]
  63 0020 02F01002 		and	r2, r2, #16
  64 0024 0092     		str	r2, [sp]
  65              		.loc 1 183 3 view .LVU7
  66 0026 009A     		ldr	r2, [sp]
  67              	.LBE4:
  68              		.loc 1 183 3 view .LVU8
 184:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  69              		.loc 1 184 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 184 3 view .LVU10
  72              		.loc 1 184 3 view .LVU11
  73 0028 9A69     		ldr	r2, [r3, #24]
  74 002a 42F02002 		orr	r2, r2, #32
  75 002e 9A61     		str	r2, [r3, #24]
  76              		.loc 1 184 3 view .LVU12
  77 0030 9A69     		ldr	r2, [r3, #24]
  78 0032 02F02002 		and	r2, r2, #32
  79 0036 0192     		str	r2, [sp, #4]
  80              		.loc 1 184 3 view .LVU13
  81 0038 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 184 3 view .LVU14
 185:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 185 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 185 3 view .LVU16
  87              		.loc 1 185 3 view .LVU17
  88 003a 9A69     		ldr	r2, [r3, #24]
  89 003c 42F00402 		orr	r2, r2, #4
  90 0040 9A61     		str	r2, [r3, #24]
  91              		.loc 1 185 3 view .LVU18
  92 0042 9A69     		ldr	r2, [r3, #24]
  93 0044 02F00402 		and	r2, r2, #4
  94 0048 0292     		str	r2, [sp, #8]
  95              		.loc 1 185 3 view .LVU19
  96 004a 029A     		ldr	r2, [sp, #8]
  97              	.LBE6:
  98              		.loc 1 185 3 view .LVU20
ARM GAS  /tmp/ccA5UZJh.s 			page 6


 186:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 186 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 186 3 view .LVU22
 102              		.loc 1 186 3 view .LVU23
 103 004c 9A69     		ldr	r2, [r3, #24]
 104 004e 42F00802 		orr	r2, r2, #8
 105 0052 9A61     		str	r2, [r3, #24]
 106              		.loc 1 186 3 view .LVU24
 107 0054 9B69     		ldr	r3, [r3, #24]
 108 0056 03F00803 		and	r3, r3, #8
 109 005a 0393     		str	r3, [sp, #12]
 110              		.loc 1 186 3 view .LVU25
 111 005c 039B     		ldr	r3, [sp, #12]
 112              	.LBE7:
 113              		.loc 1 186 3 view .LVU26
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC14 PC15 */
 189:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 114              		.loc 1 189 3 view .LVU27
 115              		.loc 1 189 23 is_stmt 0 view .LVU28
 116 005e 4FF46043 		mov	r3, #57344
 117 0062 0493     		str	r3, [sp, #16]
 190:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 118              		.loc 1 190 3 is_stmt 1 view .LVU29
 119              		.loc 1 190 24 is_stmt 0 view .LVU30
 120 0064 0324     		movs	r4, #3
 121 0066 0594     		str	r4, [sp, #20]
 191:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 122              		.loc 1 191 3 is_stmt 1 view .LVU31
 123 0068 04A9     		add	r1, sp, #16
 124 006a 1148     		ldr	r0, .L3
 125 006c FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL0:
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /*Configure GPIO pins : PD0 PD1 */
 194:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 127              		.loc 1 194 3 view .LVU32
 128              		.loc 1 194 23 is_stmt 0 view .LVU33
 129 0070 0494     		str	r4, [sp, #16]
 195:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 130              		.loc 1 195 3 is_stmt 1 view .LVU34
 131              		.loc 1 195 24 is_stmt 0 view .LVU35
 132 0072 0594     		str	r4, [sp, #20]
 196:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 133              		.loc 1 196 3 is_stmt 1 view .LVU36
 134 0074 04A9     		add	r1, sp, #16
 135 0076 0F48     		ldr	r0, .L3+4
 136 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL1:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 PA3
 199:Core/Src/main.c ****                            PA4 PA5 PA6 PA7
 200:Core/Src/main.c ****                            PA8 PA9 PA10 PA11
 201:Core/Src/main.c ****                            PA12 PA15 */
 202:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 138              		.loc 1 202 3 view .LVU37
ARM GAS  /tmp/ccA5UZJh.s 			page 7


 139              		.loc 1 202 23 is_stmt 0 view .LVU38
 140 007c 49F6FF73 		movw	r3, #40959
 141 0080 0493     		str	r3, [sp, #16]
 203:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7
 204:Core/Src/main.c ****                           |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 205:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_15;
 206:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 142              		.loc 1 206 3 is_stmt 1 view .LVU39
 143              		.loc 1 206 24 is_stmt 0 view .LVU40
 144 0082 0594     		str	r4, [sp, #20]
 207:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 207 3 is_stmt 1 view .LVU41
 146 0084 04A9     		add	r1, sp, #16
 147 0086 0C48     		ldr	r0, .L3+8
 148 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB10
 210:Core/Src/main.c ****                            PB11 PB12 PB13 PB14
 211:Core/Src/main.c ****                            PB15 PB3 PB4 PB5
 212:Core/Src/main.c ****                            PB6 PB7 PB8 PB9 */
 213:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10
 150              		.loc 1 213 3 view .LVU42
 151              		.loc 1 213 23 is_stmt 0 view .LVU43
 152 008c 4FF6FF73 		movw	r3, #65535
 153 0090 0493     		str	r3, [sp, #16]
 214:Core/Src/main.c ****                           |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
 215:Core/Src/main.c ****                           |GPIO_PIN_15|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 216:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 217:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 154              		.loc 1 217 3 is_stmt 1 view .LVU44
 155              		.loc 1 217 24 is_stmt 0 view .LVU45
 156 0092 0594     		str	r4, [sp, #20]
 218:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 157              		.loc 1 218 3 is_stmt 1 view .LVU46
 158 0094 04A9     		add	r1, sp, #16
 159 0096 0948     		ldr	r0, .L3+12
 160 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL3:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /*Configure peripheral I/O remapping */
 221:Core/Src/main.c ****   __HAL_AFIO_REMAP_PD01_ENABLE();
 162              		.loc 1 221 3 view .LVU47
 163              	.LBB8:
 164              		.loc 1 221 3 view .LVU48
 165 009c 084A     		ldr	r2, .L3+16
 166 009e 5368     		ldr	r3, [r2, #4]
 167              	.LVL4:
 168              		.loc 1 221 3 view .LVU49
 169              		.loc 1 221 3 view .LVU50
 170 00a0 43F0E063 		orr	r3, r3, #117440512
 171              	.LVL5:
 172              		.loc 1 221 3 is_stmt 0 view .LVU51
 173 00a4 43F40043 		orr	r3, r3, #32768
 174              	.LVL6:
 175              		.loc 1 221 3 is_stmt 1 view .LVU52
 176 00a8 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccA5UZJh.s 			page 8


 177              	.LBE8:
 178              		.loc 1 221 3 view .LVU53
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** }
 179              		.loc 1 223 1 is_stmt 0 view .LVU54
 180 00aa 08B0     		add	sp, sp, #32
 181              	.LCFI2:
 182              		.cfi_def_cfa_offset 8
 183              		@ sp needed
 184 00ac 10BD     		pop	{r4, pc}
 185              	.L4:
 186 00ae 00BF     		.align	2
 187              	.L3:
 188 00b0 00100140 		.word	1073811456
 189 00b4 00140140 		.word	1073812480
 190 00b8 00080140 		.word	1073809408
 191 00bc 000C0140 		.word	1073810432
 192 00c0 00000140 		.word	1073807360
 193              		.cfi_endproc
 194              	.LFE72:
 196              		.section	.text.StartDefaultTask,"ax",%progbits
 197              		.align	1
 198              		.global	StartDefaultTask
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	StartDefaultTask:
 204              	.LFB73:
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /* USER CODE END 4 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 230:Core/Src/main.c **** /**
 231:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 232:Core/Src/main.c ****   * @param  argument: Not used
 233:Core/Src/main.c ****   * @retval None
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 236:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 237:Core/Src/main.c **** {
 205              		.loc 1 237 1 is_stmt 1 view -0
 206              		.cfi_startproc
 207              		@ Volatile: function does not return.
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              	.LVL7:
 211              		.loc 1 237 1 is_stmt 0 view .LVU56
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI3:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
 217              	.LVL8:
 218              	.L6:
 238:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
ARM GAS  /tmp/ccA5UZJh.s 			page 9


 239:Core/Src/main.c ****   /* Infinite loop */
 240:Core/Src/main.c ****   for(;;)
 219              		.loc 1 240 3 is_stmt 1 discriminator 1 view .LVU57
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     osDelay(1);
 220              		.loc 1 242 5 discriminator 1 view .LVU58
 221 0002 0120     		movs	r0, #1
 222 0004 FFF7FEFF 		bl	osDelay
 223              	.LVL9:
 240:Core/Src/main.c ****   {
 224              		.loc 1 240 8 discriminator 1 view .LVU59
 225 0008 FBE7     		b	.L6
 226              		.cfi_endproc
 227              	.LFE73:
 229              		.section	.text.task2Init,"ax",%progbits
 230              		.align	1
 231              		.global	task2Init
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	task2Init:
 237              	.LFB74:
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c ****   /* USER CODE END 5 */
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** void task2Init(void const *argument){
 238              		.loc 1 247 37 view -0
 239              		.cfi_startproc
 240              		@ Volatile: function does not return.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL10:
 244              		.loc 1 247 37 is_stmt 0 view .LVU61
 245 0000 08B5     		push	{r3, lr}
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 250              	.LVL11:
 251              	.L9:
 248:Core/Src/main.c ****   
 249:Core/Src/main.c ****   while(1){
 252              		.loc 1 249 3 is_stmt 1 discriminator 1 view .LVU62
 250:Core/Src/main.c ****     //printf("teste = %d\n", idx++);
 251:Core/Src/main.c ****     idx++;
 253              		.loc 1 251 5 discriminator 1 view .LVU63
 254              		.loc 1 251 8 is_stmt 0 discriminator 1 view .LVU64
 255 0002 044A     		ldr	r2, .L11
 256 0004 1368     		ldr	r3, [r2]
 257 0006 0133     		adds	r3, r3, #1
 258 0008 1360     		str	r3, [r2]
 252:Core/Src/main.c ****     osDelay(1000);
 259              		.loc 1 252 5 is_stmt 1 discriminator 1 view .LVU65
 260 000a 4FF47A70 		mov	r0, #1000
 261 000e FFF7FEFF 		bl	osDelay
 262              	.LVL12:
ARM GAS  /tmp/ccA5UZJh.s 			page 10


 249:Core/Src/main.c ****     //printf("teste = %d\n", idx++);
 263              		.loc 1 249 8 discriminator 1 view .LVU66
 264 0012 F6E7     		b	.L9
 265              	.L12:
 266              		.align	2
 267              	.L11:
 268 0014 00000000 		.word	.LANCHOR0
 269              		.cfi_endproc
 270              	.LFE74:
 272              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 273              		.align	1
 274              		.global	HAL_TIM_PeriodElapsedCallback
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 279              	HAL_TIM_PeriodElapsedCallback:
 280              	.LVL13:
 281              	.LFB75:
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c **** }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 258:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 259:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 260:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 261:Core/Src/main.c ****   * @param  htim : TIM handle
 262:Core/Src/main.c ****   * @retval None
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 265:Core/Src/main.c **** {
 282              		.loc 1 265 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		.loc 1 265 1 is_stmt 0 view .LVU68
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI5:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 266:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 269:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 292              		.loc 1 269 3 is_stmt 1 view .LVU69
 293              		.loc 1 269 11 is_stmt 0 view .LVU70
 294 0002 0268     		ldr	r2, [r0]
 295              		.loc 1 269 6 view .LVU71
 296 0004 034B     		ldr	r3, .L17
 297 0006 9A42     		cmp	r2, r3
 298 0008 00D0     		beq	.L16
 299              	.LVL14:
 300              	.L13:
 270:Core/Src/main.c ****     HAL_IncTick();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
ARM GAS  /tmp/ccA5UZJh.s 			page 11


 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 275:Core/Src/main.c **** }
 301              		.loc 1 275 1 view .LVU72
 302 000a 08BD     		pop	{r3, pc}
 303              	.LVL15:
 304              	.L16:
 270:Core/Src/main.c ****     HAL_IncTick();
 305              		.loc 1 270 5 is_stmt 1 view .LVU73
 306 000c FFF7FEFF 		bl	HAL_IncTick
 307              	.LVL16:
 308              		.loc 1 275 1 is_stmt 0 view .LVU74
 309 0010 FBE7     		b	.L13
 310              	.L18:
 311 0012 00BF     		.align	2
 312              	.L17:
 313 0014 002C0140 		.word	1073818624
 314              		.cfi_endproc
 315              	.LFE75:
 317              		.section	.text.Error_Handler,"ax",%progbits
 318              		.align	1
 319              		.global	Error_Handler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	Error_Handler:
 325              	.LFB76:
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** /**
 278:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** void Error_Handler(void)
 282:Core/Src/main.c **** {
 326              		.loc 1 282 1 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ Volatile: function does not return.
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 283:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 284:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 285:Core/Src/main.c ****   __disable_irq();
 332              		.loc 1 285 3 view .LVU76
 333              	.LBB9:
 334              	.LBI9:
 335              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /tmp/ccA5UZJh.s 			page 12


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /tmp/ccA5UZJh.s 			page 13


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccA5UZJh.s 			page 14


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 336              		.loc 2 140 27 view .LVU77
 337              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 338              		.loc 2 142 3 view .LVU78
 339              		.syntax unified
 340              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 341 0000 72B6     		cpsid i
 342              	@ 0 "" 2
 343              		.thumb
 344              		.syntax unified
 345              	.L20:
 346              	.LBE10:
 347              	.LBE9:
 286:Core/Src/main.c ****   while (1)
 348              		.loc 1 286 3 discriminator 1 view .LVU79
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****   }
 349              		.loc 1 288 3 discriminator 1 view .LVU80
 286:Core/Src/main.c ****   while (1)
 350              		.loc 1 286 9 discriminator 1 view .LVU81
 351 0002 FEE7     		b	.L20
 352              		.cfi_endproc
 353              	.LFE76:
 355              		.section	.text.SystemClock_Config,"ax",%progbits
 356              		.align	1
 357              		.global	SystemClock_Config
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	SystemClock_Config:
 363              	.LFB71:
 143:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 364              		.loc 1 143 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 64
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 00B5     		push	{lr}
 369              	.LCFI6:
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 14, -4
ARM GAS  /tmp/ccA5UZJh.s 			page 15


 372 0002 91B0     		sub	sp, sp, #68
 373              	.LCFI7:
 374              		.cfi_def_cfa_offset 72
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 375              		.loc 1 144 3 view .LVU83
 144:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 376              		.loc 1 144 22 is_stmt 0 view .LVU84
 377 0004 2822     		movs	r2, #40
 378 0006 0021     		movs	r1, #0
 379 0008 06A8     		add	r0, sp, #24
 380 000a FFF7FEFF 		bl	memset
 381              	.LVL17:
 145:Core/Src/main.c **** 
 382              		.loc 1 145 3 is_stmt 1 view .LVU85
 145:Core/Src/main.c **** 
 383              		.loc 1 145 22 is_stmt 0 view .LVU86
 384 000e 0023     		movs	r3, #0
 385 0010 0193     		str	r3, [sp, #4]
 386 0012 0293     		str	r3, [sp, #8]
 387 0014 0393     		str	r3, [sp, #12]
 388 0016 0493     		str	r3, [sp, #16]
 389 0018 0593     		str	r3, [sp, #20]
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 390              		.loc 1 150 3 is_stmt 1 view .LVU87
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 391              		.loc 1 150 36 is_stmt 0 view .LVU88
 392 001a 0223     		movs	r3, #2
 393 001c 0693     		str	r3, [sp, #24]
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 394              		.loc 1 151 3 is_stmt 1 view .LVU89
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 395              		.loc 1 151 30 is_stmt 0 view .LVU90
 396 001e 0123     		movs	r3, #1
 397 0020 0A93     		str	r3, [sp, #40]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 398              		.loc 1 152 3 is_stmt 1 view .LVU91
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 399              		.loc 1 152 41 is_stmt 0 view .LVU92
 400 0022 1023     		movs	r3, #16
 401 0024 0B93     		str	r3, [sp, #44]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 402              		.loc 1 153 3 is_stmt 1 view .LVU93
 154:Core/Src/main.c ****   {
 403              		.loc 1 154 3 view .LVU94
 154:Core/Src/main.c ****   {
 404              		.loc 1 154 7 is_stmt 0 view .LVU95
 405 0026 06A8     		add	r0, sp, #24
 406 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 407              	.LVL18:
 154:Core/Src/main.c ****   {
 408              		.loc 1 154 6 view .LVU96
 409 002c 68B9     		cbnz	r0, .L25
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 410              		.loc 1 160 3 is_stmt 1 view .LVU97
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 411              		.loc 1 160 31 is_stmt 0 view .LVU98
 412 002e 0F23     		movs	r3, #15
ARM GAS  /tmp/ccA5UZJh.s 			page 16


 413 0030 0193     		str	r3, [sp, #4]
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 414              		.loc 1 162 3 is_stmt 1 view .LVU99
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 415              		.loc 1 162 34 is_stmt 0 view .LVU100
 416 0032 0021     		movs	r1, #0
 417 0034 0291     		str	r1, [sp, #8]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 418              		.loc 1 163 3 is_stmt 1 view .LVU101
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 419              		.loc 1 163 35 is_stmt 0 view .LVU102
 420 0036 0391     		str	r1, [sp, #12]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 421              		.loc 1 164 3 is_stmt 1 view .LVU103
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 422              		.loc 1 164 36 is_stmt 0 view .LVU104
 423 0038 0491     		str	r1, [sp, #16]
 165:Core/Src/main.c **** 
 424              		.loc 1 165 3 is_stmt 1 view .LVU105
 165:Core/Src/main.c **** 
 425              		.loc 1 165 36 is_stmt 0 view .LVU106
 426 003a 0591     		str	r1, [sp, #20]
 167:Core/Src/main.c ****   {
 427              		.loc 1 167 3 is_stmt 1 view .LVU107
 167:Core/Src/main.c ****   {
 428              		.loc 1 167 7 is_stmt 0 view .LVU108
 429 003c 01A8     		add	r0, sp, #4
 430 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 431              	.LVL19:
 167:Core/Src/main.c ****   {
 432              		.loc 1 167 6 view .LVU109
 433 0042 20B9     		cbnz	r0, .L26
 171:Core/Src/main.c **** 
 434              		.loc 1 171 1 view .LVU110
 435 0044 11B0     		add	sp, sp, #68
 436              	.LCFI8:
 437              		.cfi_remember_state
 438              		.cfi_def_cfa_offset 4
 439              		@ sp needed
 440 0046 5DF804FB 		ldr	pc, [sp], #4
 441              	.L25:
 442              	.LCFI9:
 443              		.cfi_restore_state
 156:Core/Src/main.c ****   }
 444              		.loc 1 156 5 is_stmt 1 view .LVU111
 445 004a FFF7FEFF 		bl	Error_Handler
 446              	.LVL20:
 447              	.L26:
 169:Core/Src/main.c ****   }
 448              		.loc 1 169 5 view .LVU112
 449 004e FFF7FEFF 		bl	Error_Handler
 450              	.LVL21:
 451              		.cfi_endproc
 452              	.LFE71:
 454              		.section	.text.main,"ax",%progbits
 455              		.align	1
 456              		.global	main
ARM GAS  /tmp/ccA5UZJh.s 			page 17


 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 461              	main:
 462              	.LFB70:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 463              		.loc 1 69 1 view -0
 464              		.cfi_startproc
 465              		@ Volatile: function does not return.
 466              		@ args = 0, pretend = 0, frame = 56
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468 0000 00B5     		push	{lr}
 469              	.LCFI10:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 14, -4
 472 0002 8FB0     		sub	sp, sp, #60
 473              	.LCFI11:
 474              		.cfi_def_cfa_offset 64
  76:Core/Src/main.c **** 
 475              		.loc 1 76 3 view .LVU114
 476 0004 FFF7FEFF 		bl	HAL_Init
 477              	.LVL22:
  83:Core/Src/main.c **** 
 478              		.loc 1 83 3 view .LVU115
 479 0008 FFF7FEFF 		bl	SystemClock_Config
 480              	.LVL23:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 481              		.loc 1 90 3 view .LVU116
 482 000c FFF7FEFF 		bl	MX_GPIO_Init
 483              	.LVL24:
 113:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 484              		.loc 1 113 3 view .LVU117
 485 0010 124C     		ldr	r4, .L30
 486 0012 0DF11C0C 		add	ip, sp, #28
 487 0016 A646     		mov	lr, r4
 488 0018 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 489 001c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 490 0020 9EE80700 		ldm	lr, {r0, r1, r2}
 491 0024 8CE80700 		stm	ip, {r0, r1, r2}
 114:Core/Src/main.c **** 
 492              		.loc 1 114 3 view .LVU118
 114:Core/Src/main.c **** 
 493              		.loc 1 114 23 is_stmt 0 view .LVU119
 494 0028 0021     		movs	r1, #0
 495 002a 07A8     		add	r0, sp, #28
 496 002c FFF7FEFF 		bl	osThreadCreate
 497              	.LVL25:
 114:Core/Src/main.c **** 
 498              		.loc 1 114 21 view .LVU120
 499 0030 0B4B     		ldr	r3, .L30+4
 500 0032 1860     		str	r0, [r3]
 116:Core/Src/main.c ****   Task2Handler = osThreadCreate(osThread(Task2), NULL);
 501              		.loc 1 116 3 is_stmt 1 view .LVU121
 502 0034 EE46     		mov	lr, sp
 503 0036 04F11C0C 		add	ip, r4, #28
 504 003a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 505 003e AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
ARM GAS  /tmp/ccA5UZJh.s 			page 18


 506 0042 9CE80700 		ldm	ip, {r0, r1, r2}
 507 0046 8EE80700 		stm	lr, {r0, r1, r2}
 117:Core/Src/main.c **** 
 508              		.loc 1 117 3 view .LVU122
 117:Core/Src/main.c **** 
 509              		.loc 1 117 18 is_stmt 0 view .LVU123
 510 004a 0021     		movs	r1, #0
 511 004c 6846     		mov	r0, sp
 512 004e FFF7FEFF 		bl	osThreadCreate
 513              	.LVL26:
 117:Core/Src/main.c **** 
 514              		.loc 1 117 16 view .LVU124
 515 0052 044B     		ldr	r3, .L30+8
 516 0054 1860     		str	r0, [r3]
 124:Core/Src/main.c **** 
 517              		.loc 1 124 3 is_stmt 1 view .LVU125
 518 0056 FFF7FEFF 		bl	osKernelStart
 519              	.LVL27:
 520              	.L28:
 129:Core/Src/main.c ****   {
 521              		.loc 1 129 3 discriminator 1 view .LVU126
 134:Core/Src/main.c ****   /* USER CODE END 3 */
 522              		.loc 1 134 3 discriminator 1 view .LVU127
 129:Core/Src/main.c ****   {
 523              		.loc 1 129 9 discriminator 1 view .LVU128
 524 005a FEE7     		b	.L28
 525              	.L31:
 526              		.align	2
 527              	.L30:
 528 005c 00000000 		.word	.LANCHOR1
 529 0060 00000000 		.word	.LANCHOR2
 530 0064 00000000 		.word	.LANCHOR3
 531              		.cfi_endproc
 532              	.LFE70:
 534              		.section	.text.assert_failed,"ax",%progbits
 535              		.align	1
 536              		.global	assert_failed
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 541              	assert_failed:
 542              	.LVL28:
 543              	.LFB77:
 289:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 295:Core/Src/main.c ****   *         where the assert_param error has occurred.
 296:Core/Src/main.c ****   * @param  file: pointer to the source file name
 297:Core/Src/main.c ****   * @param  line: assert_param error line source number
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 301:Core/Src/main.c **** {
 544              		.loc 1 301 1 view -0
ARM GAS  /tmp/ccA5UZJh.s 			page 19


 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 302:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 303:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 304:Core/Src/main.c ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 305:Core/Src/main.c ****   /* USER CODE END 6 */
 306:Core/Src/main.c **** }
 549              		.loc 1 306 1 view .LVU130
 550 0000 7047     		bx	lr
 551              		.cfi_endproc
 552              	.LFE77:
 554              		.global	idx
 555              		.global	Task2Handler
 556              		.global	defaultTaskHandle
 557              		.section	.rodata
 558              		.align	2
 559              		.set	.LANCHOR1,. + 0
 560              	.LC4:
 561 0000 00000000 		.word	.LC0
 562 0004 00000000 		.word	StartDefaultTask
 563 0008 0000     		.short	0
 564 000a 0000     		.space	2
 565 000c 00000000 		.word	0
 566 0010 80000000 		.word	128
 567 0014 00000000 		.word	0
 568 0018 00000000 		.word	0
 569              	.LC5:
 570 001c 0C000000 		.word	.LC2
 571 0020 00000000 		.word	task2Init
 572 0024 0000     		.short	0
 573 0026 0000     		.space	2
 574 0028 00000000 		.word	0
 575 002c 80000000 		.word	128
 576 0030 00000000 		.word	0
 577 0034 00000000 		.word	0
 578              		.section	.bss.Task2Handler,"aw",%nobits
 579              		.align	2
 580              		.set	.LANCHOR3,. + 0
 583              	Task2Handler:
 584 0000 00000000 		.space	4
 585              		.section	.bss.defaultTaskHandle,"aw",%nobits
 586              		.align	2
 587              		.set	.LANCHOR2,. + 0
 590              	defaultTaskHandle:
 591 0000 00000000 		.space	4
 592              		.section	.bss.idx,"aw",%nobits
 593              		.align	2
 594              		.set	.LANCHOR0,. + 0
 597              	idx:
 598 0000 00000000 		.space	4
 599              		.text
 600              	.Letext0:
 601              		.file 3 "/home/joswan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 602              		.file 4 "/home/joswan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-no
 603              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  /tmp/ccA5UZJh.s 			page 20


 604              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 605              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 606              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 607              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 608              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 609              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 610              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 611              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 612              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 613              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 614              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 615              		.file 17 "<built-in>"
ARM GAS  /tmp/ccA5UZJh.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccA5UZJh.s:15     .rodata.str1.4:0000000000000000 $d
     /tmp/ccA5UZJh.s:25     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccA5UZJh.s:30     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccA5UZJh.s:188    .text.MX_GPIO_Init:00000000000000b0 $d
     /tmp/ccA5UZJh.s:197    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccA5UZJh.s:203    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccA5UZJh.s:230    .text.task2Init:0000000000000000 $t
     /tmp/ccA5UZJh.s:236    .text.task2Init:0000000000000000 task2Init
     /tmp/ccA5UZJh.s:268    .text.task2Init:0000000000000014 $d
     /tmp/ccA5UZJh.s:273    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccA5UZJh.s:279    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccA5UZJh.s:313    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccA5UZJh.s:318    .text.Error_Handler:0000000000000000 $t
     /tmp/ccA5UZJh.s:324    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccA5UZJh.s:356    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccA5UZJh.s:362    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccA5UZJh.s:455    .text.main:0000000000000000 $t
     /tmp/ccA5UZJh.s:461    .text.main:0000000000000000 main
     /tmp/ccA5UZJh.s:528    .text.main:000000000000005c $d
     /tmp/ccA5UZJh.s:535    .text.assert_failed:0000000000000000 $t
     /tmp/ccA5UZJh.s:541    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccA5UZJh.s:597    .bss.idx:0000000000000000 idx
     /tmp/ccA5UZJh.s:583    .bss.Task2Handler:0000000000000000 Task2Handler
     /tmp/ccA5UZJh.s:590    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccA5UZJh.s:558    .rodata:0000000000000000 $d
     /tmp/ccA5UZJh.s:579    .bss.Task2Handler:0000000000000000 $d
     /tmp/ccA5UZJh.s:586    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccA5UZJh.s:593    .bss.idx:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
osDelay
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osThreadCreate
osKernelStart
